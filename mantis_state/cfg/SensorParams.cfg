#!/usr/bin/env python
PACKAGE = "mantis_state"

from dynamic_reconfigure.parameter_generator_catkin import *
import math

gen = ParameterGenerator()

gen.add("rate/deviation", double_t, 0, "Allowable percentage deviation from expected rate of a sensor", 0.1)

gen.add("rate/accel", double_t, 0, "Expected rate of accelerometer data (in Hz)", 100.0)
gen.add("rate/gyro", double_t, 0, "Expected rate of gyroscope data (in Hz)", 100.0)
gen.add("rate/mag", double_t, 0, "Expected rate of magnetometer data (in Hz)", 25.0)
gen.add("rate/att", double_t, 0, "Expected rate of attitude data (in Hz)", 20.0)
gen.add("rate/pos", double_t, 0, "Expected rate of position data (in Hz)", 20.0)
gen.add("rate/vel", double_t, 0, "Expected rate of velocity data (in Hz)", 20.0)
gen.add("rate/joints", double_t, 0, "Expected rate of joint data (in Hz)", 20.0)
gen.add("rate/battery", double_t, 0, "Expected rate of battery data (in Hz)", 5.0)

gen.add("att/adapt_bias", double_t, 0, "", 0.6)
gen.add("att/alpha_accel", double_t, 0, "", 0.6)
gen.add("att/alpha_gyro", double_t, 0, "", 0.6)
gen.add("att/corr_accel", double_t, 0, "", 0.6)
gen.add("att/corr_mag", double_t, 0, "", 0.2)
gen.add("att/corr_ext", double_t, 0, "", 0.2)

gen.add("battery/alpha_voltage", double_t, 0, "", 0.6)

gen.add("scaling/accel", double_t, 0, "Scaling filter parameter for accelerometer readings", 1.0)
#gen.add("scaling/gyro", double_t, 0, "Scaling filter parameter for gyroscope readings", 1.0)
#gen.add("scaling/mag", double_t, 0, "Scaling filter parameter for magnetometer readings", 1.0)
gen.add("scaling/pos", double_t, 0, "Scaling filter parameter for position readings", 5.0)
gen.add("scaling/vel", double_t, 0, "Scaling filter parameter for velocity readings", 5.0)
gen.add("scaling/joints", double_t, 0, "Scaling filter parameter for joints readings", 5.0)
#gen.add("scaling/battery", double_t, 0, "Scaling filter parameter for battery readings", 5.0)

exit(gen.generate(PACKAGE, "mantis_state_node", "SensorParams"))
