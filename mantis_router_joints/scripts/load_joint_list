#!/usr/bin/env python2

import sys
from math import *

import rospy
from mantis_msgs.msg import JointTrajectoryList

global pub_jl
global timer

def timer_callback(e):
	global pub_jl
	global timer

	if e.current_real > rospy.Time(0):
		if( rospy.has_param("~joint_list/c0") ):
			msg_out = JointTrajectoryList()
			msg_out.header.frame_id = rospy.get_param("~frame_id", "mantis_uav")
			msg_out.header.stamp = e.current_real

			i = 0
			num_joints_last = 0
			while( rospy.has_param("~joint_list/c%i" % (i)) ):
				jc = rospy.get_param("~joint_list/c%i" % (i))

				if num_joints_last == 0:
					num_joints_last = len(jc)
				elif num_joints_last != len(jc):
					rospy.logerr("Joint list sizes inconsistent (%i)" % i)
					rospy.signal_shutdown("Error: lists inconsistent")
					break

				msg_out.joint_interp_points += jc
				i += 1

			msg_out.num_joints = num_joints_last
			msg_out.num_points = i

			if not rospy.is_shutdown():
				rospy.loginfo("Loaded joint lists with %i sets of setpoints" % (i))
				pub_jl.publish(msg_out)

			timer.shutdown()
		else:
			rospy.logerr("Unable to locate joint list parameters")
			rospy.signal_shutdown("Error: no joint setpoints")

def joint_list_pub():
	global timer
	global pub_jl
	rospy.init_node('load_joint_list', anonymous=True)
	pub_jl = rospy.Publisher('~joint_setpoints', JointTrajectoryList, queue_size=10, latch=True)

	rospy.loginfo("Loading joint list from parameters...")
	timer = rospy.Timer(rospy.Duration(1.0/50.0), timer_callback)

	rospy.spin()

if __name__ == '__main__':
	try:
		joint_list_pub()
	except rospy.ROSInterruptException:
		pass
