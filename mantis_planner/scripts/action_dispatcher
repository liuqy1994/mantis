#! /usr/bin/env python

import roslib
roslib.load_manifest('mantis_planner')
import rospy
import actionlib

from mantis_router_joints.msg import JointMovementAction, JointMovementGoal

if __name__ == '__main__':
	rospy.init_node('action_dispatcher', anonymous=True)
	client_elbow = actionlib.SimpleActionClient('/mantis_uav/router_joints/joint_elbow', JointMovementAction)
	client_shoulder = actionlib.SimpleActionClient('/mantis_uav/router_joints/joint_shoulder', JointMovementAction)
	client_elbow.wait_for_server()
	client_shoulder.wait_for_server()

	goal = JointMovementGoal()
	goal.start = rospy.Time.now() + rospy.Duration.from_sec(2)
	goal.duration = rospy.Duration.from_sec(10)
	goal.positions = [0.0, 1.0, -1.0, 0.0]

	client_elbow.send_goal(goal)
	client_shoulder.send_goal(goal)

	client_elbow.wait_for_result()
	client_shoulder.wait_for_result()
	result_elbow = client_elbow.get_result()
	result_shoulder = client_shoulder.get_result()

	#goal = JointMovementGoal()
	#goal.start = rospy.Time.now() + rospy.Duration.from_sec(1)
	#goal.duration = rospy.Duration.from_sec(5)
	#goal.positions = [result_elbow.position_final, 0.0]

	#client_elbow.send_goal(goal)
	#client_shoulder.send_goal(goal)

	#client_elbow.wait_for_result()
	#client_shoulder.wait_for_result()
